# Generated by Django 5.1.7 on 2025-03-09 19:36

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FileNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hostname', models.CharField(max_length=255)),
                ('port', models.IntegerField(default=9000)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StoredFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=100)),
                ('size_bytes', models.BigIntegerField()),
                ('content_type', models.CharField(max_length=100)),
                ('checksum', models.CharField(max_length=64)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_files', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FileChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chunk_number', models.IntegerField()),
                ('size_bytes', models.IntegerField()),
                ('checksum', models.CharField(max_length=64)),
                ('storage_path', models.CharField(max_length=255)),
                ('is_replica', models.BooleanField(default=False)),
                ('node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stored_chunks', to='file_storage.filenode')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='file_storage.storedfile')),
            ],
            options={
                'unique_together': {('file', 'chunk_number', 'is_replica')},
            },
        ),
    ]
